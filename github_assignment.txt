{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 The repository I decided to download is from The LA Times\'92 Git Hub account and is a wrapper (which I just learned is some sort of third-party function that adapts Python code to non-Python code? I think?) that the staff used to access and adapt the Associated Press\'92 U.S. election data service\'92s information for news stories. Within the repository there are three files and a handful of separate documents. Two of the files seem self-explanatory (one is just \'93docs\'94 and the other is \'93elections\'94) but the other file is just called \'93.eggs\'94 and I\'92m assuming that doesn\'92t mean eggs from birds and mammals.\
\
With this repository, The LA Times is able to access AP election results in the U.S., including all races in U.S. states and counties and the presidential election. As I learned more about this repository I realized that this seemed like a tool that not only The LA Times uses constantly, but also tons of other news outlets. I visited the AP\'92s Python election page and it actually had shared a few Python wrappers \'93In the wild\'94 on it\'92s homepage ({\field{\*\fldinst{HYPERLINK "http://python-elections.readthedocs.io/en/latest/"}}{\fldrslt http://python-elections.readthedocs.io/en/latest/}}). It seems like this is how a lot of media organizations work on election coverage.}